name: Release

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.0, v2.1.3, etc.
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.0.0, 1.0.0-beta.1)'
        required: true
        default: '1.0.0-beta.1'

env:
  DFX_VERSION: 0.28.0

jobs:
  build-and-release:
    runs-on: ubuntu-24.04
    permissions:
      contents: write  # Required for creating releases
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            ~/.dfx
          key: ${{ runner.os }}-release-${{ hashFiles('**/Cargo.lock') }}-${{ env.DFX_VERSION }}

      - name: Install tools via mise
        uses: jdx/mise-action@v2
        with:
          cache: true

      - name: Add Rust Wasm target
        run: rustup target add wasm32-unknown-unknown

      - name: Install DFX
        run: |
          wget https://github.com/dfinity/sdk/releases/download/$DFX_VERSION/dfx-$DFX_VERSION-x86_64-linux.tar.gz
          tar -xzf dfx-$DFX_VERSION-x86_64-linux.tar.gz
          sudo mv dfx /usr/local/bin/dfx
          dfx --version

      - name: Build canisters
        run: |
          set -e  # Exit on any error
          mkdir -p release-artifacts

          echo "Building testicp..."
          just build testicp
          if [ ! -f "./target/wasm32-unknown-unknown/release/backend.wasm" ]; then
            echo "Error: testicp build failed - backend.wasm not found"
            exit 1
          fi
          mv ./target/wasm32-unknown-unknown/release/backend.wasm ./release-artifacts/testicp.wasm

          echo "Building ticrc1..."
          just build ticrc1
          if [ ! -f "./target/wasm32-unknown-unknown/release/backend.wasm" ]; then
            echo "Error: ticrc1 build failed - backend.wasm not found"
            exit 1
          fi
          mv ./target/wasm32-unknown-unknown/release/backend.wasm ./release-artifacts/ticrc1.wasm

          echo "Build artifacts created:"
          ls -la release-artifacts/

      - name: Extract version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "VERSION=v${{ inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.VERSION }}
          name: Ledger Faucet Release ${{ steps.version.outputs.VERSION }}
          draft: false
          prerelease: ${{ contains(steps.version.outputs.VERSION, '-') }}
          generate_release_notes: true
          files: |
            release-artifacts/*
          body: |
            This release contains the following artifacts:
            
            - TESTICP Faucet Canister: `testicp.wasm`
            - TICRC1 Faucet Canister: `ticrc1.wasm`
            
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
