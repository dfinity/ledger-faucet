name: CI

env:
  RUST_VERSION: 1.88.0
  DFX_VERSION: 0.28.0

on:
  push:
    branches:
      - main
  pull_request:

jobs:

  cargo-build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-24.04, macos-15 ]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-1

      - name: Install Rust
        run: |
          rustup update $RUST_VERSION --no-self-update
          rustup default $RUST_VERSION
          rustup target add wasm32-unknown-unknown

      - name: Build
        run: cargo build --release --all-targets
        env:
          RUST_BACKTRACE: 1

  cargo-clippy:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-1

      - name: Install Rust + Clippy
        run: |
          rustup update $RUST_VERSION --no-self-update
          rustup default $RUST_VERSION
          rustup target add wasm32-unknown-unknown
          rustup component add clippy

      - name: Run Clippy
        run: cargo clippy --all-targets -- -D warnings

  rustfmt:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-1

      - name: Install Rust + Rustfmt
        run: |
          rustup update $RUST_VERSION --no-self-update
          rustup default $RUST_VERSION
          rustup component add rustfmt

      - name: Check formatting
        run: cargo fmt --all -- --check

  shell-checks:
    name: ShellCheck
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v4
    - name: Run ShellCheck
      uses: ludeeus/action-shellcheck@2.0.0
      env:
        SHELLCHECK_OPTS: -e SC1090 -e SC2119 -e SC1091

  checks-pass:
    if: always()
    needs: [cargo-build, shell-checks, cargo-clippy, rustfmt]
    runs-on: ubuntu-24.04
    steps:
      - name: Check all jobs passed
        if: ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') }}
        run: exit 1
